{"version":3,"sources":["../src/ityped.js"],"names":["root","factory","define","amd","exports","module","init","ityped","global","a","forEach","b","c","d","e","length","f","g","h","j","call","async","el","props","cursor","document","createElement","classList","add","textContent","element","config","querySelector","strings","typeSpeed","pause","loop","insertAdjacentElement","words","len","loopingOnWords","word","index","arr","time","done","iterateWords","then","setTimeout","increment","span","Promise","resolve","reject","i","count","wordIndex","appendWord","charAt","innerHTML","wordsLengthArray","decrement","interateInsideDecrement","iteratedI","substring","lengthWords"],"mappings":"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","file":"ityped.js","sourcesContent":["/**\n * @name ityped\n * @description Dead simple Animated Typing with no dependencies\n * @author Luis VinÃ­cius\n * @email luis@uilabs.me\n */;\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = {\n      init: factory.init\n    }\n  } else {\n    root.ityped = factory;\n  }\n}(this, function (global) {\n  /**\n   * async foreach\n   * https://www.npmjs.com/package/async-foreach\n   */ \n  (function (a) {\n    a.forEach = function (a, b, c) {\n      var d = -1,\n        e = a.length >>> 0;\n      (function f(g) {\n        var h,\n          j = g === !1;\n        do \n          ++d;\n        while (!(d in a) && d !== e);\n        if (j || d === e) {\n          c && c(!j, a);\n          return\n        }\n        g = b.call({\n          async: function () {\n            return h = !0,\n            f\n          }\n        }, a[d], d, a),\n        h || f(g)\n      })()\n    }\n  })(typeof exports == \"object\" && exports || global);\n\n  /**\n   * el is the element\n   */\n  let el,\n    props,\n    /**\n   * creating the cursor\n   */\n    cursor = document.createElement('span');\n  cursor\n    .classList\n    .add('ityped-cursor');\n  cursor.textContent = '|';\n\n  /**\n   * @name init\n   * @param {String} el The element that will receive the strings\n   * @param {Object} confing The initial configuration\n   */\n  function init(element, config) {\n    el = document.querySelector(element);\n    props = config;\n    props.strings = config.strings || ['Put you string here...', 'and Enjoy!']\n    props.typeSpeed = config.typeSpeed || 70;\n    props.pause = config.pause || 500;\n    props.loop = config.loop || false;\n    el.insertAdjacentElement('afterend', cursor);\n    let words = props.strings,\n      len = words.length;\n\n    loopingOnWords(words);\n  }\n\n  /**\n   * @name loopingOnWords\n   * @description Loop on each string passed\n   * @param {Array} words The array that contain the words\n   */\n  function loopingOnWords(words) {\n    forEach(words, function (word, index, arr) {\n      let time = props.typeSpeed * word.length - 1;\n      let done = this.async();\n      let len = words.length;\n      iterateWords(el, word, index, len).then(function () {\n        setTimeout(function () {\n          done();\n        }, time)\n      })\n    }, function () {\n      if (props.loop) {\n        loopingOnWords(words);\n      }\n    });\n  }\n  /**\n   * @name increment\n   * @description Increment each letter and append it on element\n   * @param {Element} span The Element that will receive the letters\n   * @param {String} word The string that will be looped to\n   * get each letter\n   * @return {Promise}\n   */\n  function increment(span, word) {\n    return new Promise(function (resolve, reject) {\n      for (let i = 0; i < word.length; i++) {\n        count = 0;\n        let wordIndex = i;\n        let len = word.length;\n        setTimeout(function (i) {\n          appendWord(span, word.charAt(wordIndex));\n          count++;\n          if (count === len - 1) {\n            resolve();\n          }\n        }, props.typeSpeed * i);\n      }\n    })\n  }\n  /**\n   * @name appendWord\n   * @description Append each letter on Element\n   * @param {Element} el The Element that will receive the letter\n   * @param {String} word The string that will be appended\n   */\n  function appendWord(el, word) {\n    el.innerHTML += word;\n  }\n\n  /**\n   * @name iterateWords\n   * @description Iterate on each word, incrementing and decrementing\n   * @param {Element} element The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} index The index position of the words Array\n   * @param {Integer} wordsLengthArray The length of words Array\n   * @return {Promise}\n   */\n  function iterateWords(element, word, index, wordsLengthArray) {\n    return new Promise(function (resolve, reject) {\n      increment(element, word)\n        .then(function () {\n          setTimeout(function () {\n            decrement(element, word, index, wordsLengthArray)\n              .then(function () {\n                resolve();\n              });\n          }, props.pause)\n        });\n    })\n  }\n  /**\n   * @name interateInsideDecrement\n   * @description Iterate on each word, inside the decrement function for decrement the word\n   * @param {Element} span The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} len The length of words Array\n   * @param {Promise} resolve The Promise.resolve method that will be trigerred when\n   * the decrement iteration are finished\n   * @return {Promise}\n   */\n  function interateInsideDecrement(span, word, len, resolve) {\n    for (var i = len; i > 0; i--) {\n      let iteratedI = i;\n      let count = len;\n      setTimeout(function (i) {\n        span.innerHTML = word.substring(0, len - iteratedI)\n        count--;\n        if (iteratedI === 1) {\n          resolve();\n        }\n      }, props.typeSpeed / 3 * i);\n    }\n  }\n\n  /**\n   * @name decrement\n   * @description decrement the word in the correct case\n   * @param {Element} span The Element that will receive the letters of word\n   * @param {String} word The string that is the word\n   * @param {Integer} index The index of the Array that contain the word\n   * @param {Integer} lengthWords The length of words Array\n   */\n  function decrement(span, word, index, lengthWords) {\n    return new Promise(function (resolve, reject) {\n      let len = word.length;\n      if (!props.loop && index + 1 === lengthWords) {\n        span.innerHTML = word;\n      } else if (props.loop) {\n        interateInsideDecrement(span, word, len, resolve);\n      } else if (index + 1 !== lengthWords) {\n        interateInsideDecrement(span, word, len, resolve);\n      }\n\n    })\n  }\n\n  /**\n   * Return the init function\n   */\n  return {init}\n}(this)));"]}